import { createEvent } from '../../../supabaseClient';
import { useToastContext } from '../../ui/providers/ToastProvider';

export const handleExport = async (format, report) => {
  try {
    const { response } = await createEvent('chatgpt_request', {
      prompt: `Convert this report to ${format} format. Maintain all data points and legal content. Structure response as plain text. Report data: ${JSON.stringify(report)}`,
      response_type: 'text'
    });
    
    if (!response) {
      throw new Error('Empty response from export service');
    }

    if (format === 'word') {
      // Create a Word document for download
      const htmlContent = `
        <html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word">
        <head>
          <meta charset="UTF-8">
          <title>${report.projectName} Safety Report</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.5; }
            h1 { color: #1e40af; font-size: 24pt; }
            h2 { color: #1e3a8a; font-size: 18pt; margin-top: 24pt; }
            h3 { color: #1e3a8a; font-size: 14pt; margin-top: 18pt; }
            table { width: 100%; border-collapse: collapse; margin: 16pt 0; }
            th { background-color: #e0e7ff; text-align: left; padding: 8pt; border: 1px solid #c7d2fe; }
            td { padding: 8pt; border: 1px solid #c7d2fe; }
            .header { border-bottom: 1pt solid #c7d2fe; padding-bottom: 16pt; margin-bottom: 16pt; }
            .footer { border-top: 1pt solid #c7d2fe; padding-top: 16pt; margin-top: 16pt; font-size: 9pt; color: #6b7280; }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>${report.projectName} Safety Report</h1>
            <p>
              <strong>Client:</strong> ${report.clientName}<br>
              <strong>Organisation:</strong> ${report.organisationName}<br>
              <strong>Role:</strong> ${report.organisationRole}<br>
              <strong>Date:</strong> ${new Date(report.generatedAt).toLocaleDateString()}
            </p>
          </div>
          ${response}
          <div class="footer">
            <p>Generated by H&S Assistant | www.zapt.ai</p>
          </div>
        </body></html>
      `;
      
      const blob = new Blob([htmlContent], { type: 'application/msword' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `${report.projectName.replace(/\s+/g, '_')}_Safety_Report.doc`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    } else {
      // Copy to clipboard
      await navigator.clipboard.writeText(response);
      
      // If we had access to the toast context, we'd show a success message
      // Since this is a utility function, we'll rely on the caller to show the message
      console.log('Copied to clipboard successfully');
    }
    
    return true;
  } catch (err) {
    console.error('Export error:', err);
    alert(`Export failed: ${err.message}`);
    return false;
  }
};